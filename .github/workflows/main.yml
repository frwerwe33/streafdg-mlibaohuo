name: strea-Keepalive
on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:
    inputs:
      website_url:
        description: '被检查网站的URL'
        required: true
        type: string
      status_code:
        description: '从网站获取的状态码'
        required: true
        type: string
      timestamp:
        description: '检查发生时的时间戳'
        required: true
        type: string

jobs:
  keepalive:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Restore pip cache
      id: cache-pip
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Restore Playwright cache
      id: cache-playwright
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
          
    - name: Create playwright.version file if not exists
      run: |
        if [ ! -f "playwright.version" ]; then
          playwright_version=$(pip show playwright 2>/dev/null | grep Version | cut -d ' ' -f 2 || echo "1.34.0")
          echo "$playwright_version" > playwright.version
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        
        # Always install playwright explicitly to ensure it's available
        pip install playwright
        
        # Install from requirements.txt if it exists
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        
        # Verify playwright is installed correctly
        python -c "import playwright; print('Playwright successfully imported')"
        
        # Only install Playwright browsers if cache doesn't exist
        if [ "${{ steps.cache-playwright.outputs.cache-hit }}" != 'true' ]; then
          echo "Installing Playwright browsers..."
          python -m playwright install firefox
        else
          echo "Using cached Playwright browsers"
        fi
      
    - name: Run Python Script
      env:
        ST_URL: ${{ secrets.ST_URL }}
        PYTHONPATH: $PYTHONPATH:$(pwd)
      run: |
        # Print Python environment info for debugging
        which python
        python -V
        echo "PYTHONPATH: $PYTHONPATH"
        
        # Verify modules are accessible
        python -m pip list | grep playwright
        
        # Run the script with explicit Python path
        python -m main
        
       
    - name: Save pip cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        
    - name: Save Playwright cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}
