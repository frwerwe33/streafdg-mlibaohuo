name: Optimized Docker Run with Enhanced Security
on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:  # Manual trigger option
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Set timeout to avoid hung jobs
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Set Environment Variables
      # Using GitHub Environment to store secrets without logging
      env:
        PW: ${{ secrets.PW }}
        ST_URL: ${{ secrets.ST_URL }}
        AL_PW: ${{ secrets.AL_PW }}
        AL_PW2: ${{ secrets.AL_PW2 }}
        AL_PW3: ${{ secrets.AL_PW3 }}
        KOY_EB: ${{ secrets.KOY_EB }}
        SEC_TION: ${{ secrets.SEC_TION }}
        SEG_PW: ${{ secrets.SEG_PW }}
        TG_ID: ${{ secrets.TG_ID }}
        TG_TOKEN: ${{ secrets.TG_TOKEN }}
      run: |
        # Set environment variables without echoing to logs
        {
          echo "PW=$PW"
          echo "ST_URL=$ST_URL" 
          echo "AL_PW=$AL_PW"
          echo "AL_PW2=$AL_PW2"
          echo "AL_PW3=$AL_PW3"
          echo "KOY_EB=$KOY_EB"
          echo "SEC_TION=$SEC_TION"
          echo "SEG_PW=$SEG_PW"
          echo "TG_ID=$TG_ID"
          echo "TG_TOKEN=$TG_TOKEN"
        } >> $GITHUB_ENV
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Pull Docker image
      run: |
        echo "Pulling Docker image daxia2023/do:denglubaohuo2..."
        docker pull daxia2023/do:denglubaohuo2
        echo "Image pulled successfully"

    # Docker image caching with performance optimizations
    - name: Cache Docker images
      uses: actions/cache@v3
      id: docker-cache
      with:
        path: /tmp/docker-cache
        key: ${{ runner.os }}-docker-${{ hashFiles('**/workflow.yaml') }}
        restore-keys: |
          ${{ runner.os }}-docker-
          
    - name: Set up Docker
      uses: docker/setup-docker@v2
      with:
        buildkit: true  # Enable BuildKit for better performance
      
    - name: Load or pull Docker image
      run: |
        mkdir -p /tmp/docker-cache
        echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
        echo "DOCKER_CLI_EXPERIMENTAL=enabled" >> $GITHUB_ENV
        
        # Load from cache or pull with fallback
        if [ -f /tmp/docker-cache/image.tar ]; then
          echo "Loading Docker image from cache..."
          time docker load < /tmp/docker-cache/image.tar
          echo "Cache load completed"
        else
          echo "No cached image found, pulling from registry..."
          # Use parallel downloads for faster pulling
          docker pull --platform linux/amd64 daxia2023/do:denglubaohuo2 &
          wait
          echo "Image pulled successfully"
          
          # Save to cache in background to speed up workflow
          echo "Saving image to cache in background..."
          (docker save daxia2023/do:denglubaohuo2 > /tmp/docker-cache/image.tar) &
        fi
          
    - name: Run Docker Container
      shell: bash
      run: |
        # Add debug message without exposing variables
        echo "Starting Docker container with environment variables..."
        
        # Using the -e flag with variables set through GitHub environment
        # Adding performance optimization flags
        docker run --name denglubaohuo_container \
                  -e PW \
                  -e ST_URL \
                  -e AL_PW \
                  -e AL_PW2 \
                  -e AL_PW3 \
                  -e KOY_EB \
                  -e SEC_TION \
                  -e SEG_PW \
                  -e TG_ID \
                  -e TG_TOKEN \
                  --log-driver json-file \
                  --log-opt max-size=10m \
                  --log-opt max-file=3 \
                  --cpus=2 \
                  --memory=2g \
                  --shm-size=1g \
                  daxia2023/do:denglubaohuo2
        
        echo "Docker container execution completed"
